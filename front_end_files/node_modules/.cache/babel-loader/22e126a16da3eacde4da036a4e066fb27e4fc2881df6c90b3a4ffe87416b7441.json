{"ast":null,"code":"//export const helloWorldContract;\n\nrequire('dotenv').config();\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\nconst {\n  createAlchemyWeb3\n} = require(\"@alch/alchemy-web3\");\nconst web3 = createAlchemyWeb3(alchemyKey);\nconst contractABI = require('../contract-abi.json');\nconst contractAddress = \"0x6f3f635A9762B47954229Ea479b4541eAF402A6A\";\nexport const helloWorldContract = new web3.eth.Contract(contractABI, contractAddress);\nexport const loadCurrentMessage = async () => {\n  const message = await helloWorldContract.methods.message().call();\n  return message;\n};\nexport const connectWallet = async () => {};\nexport const getCurrentWalletConnected = async () => {};\nexport const updateMessage = async (address, message) => {};","map":{"version":3,"names":["require","config","alchemyKey","process","env","REACT_APP_ALCHEMY_KEY","createAlchemyWeb3","web3","contractABI","contractAddress","helloWorldContract","eth","Contract","loadCurrentMessage","message","methods","call","connectWallet","getCurrentWalletConnected","updateMessage","address"],"sources":["C:/Users/gcalb/OneDrive/galboum/My_Projects/CryptoToken/PotLockCoin/potlocktoken-dapp-v2/potlocktoken-dapp-v2/starter-files/src/util/interact.js"],"sourcesContent":["//export const helloWorldContract;\r\n\r\nrequire('dotenv').config();\r\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY;\r\nconst { createAlchemyWeb3 } = require(\"@alch/alchemy-web3\");\r\nconst web3 = createAlchemyWeb3(alchemyKey);\r\n\r\nconst contractABI = require('../contract-abi.json')\r\nconst contractAddress = \"0x6f3f635A9762B47954229Ea479b4541eAF402A6A\";\r\n\r\nexport const helloWorldContract = new web3.eth.Contract(\r\n  contractABI,\r\n  contractAddress\r\n);\r\n\r\nexport const loadCurrentMessage = async () => { \r\n    const message = await helloWorldContract.methods.message().call();\r\n    return message;\r\n    };\r\n\r\nexport const connectWallet = async () => {\r\n  \r\n};\r\n\r\nexport const getCurrentWalletConnected = async () => {\r\n  \r\n};\r\n\r\nexport const updateMessage = async (address, message) => {\r\n  \r\n};\r\n"],"mappings":"AAAA;;AAEAA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC;AAC1B,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;AACpD,MAAM;EAAEC;AAAkB,CAAC,GAAGN,OAAO,CAAC,oBAAoB,CAAC;AAC3D,MAAMO,IAAI,GAAGD,iBAAiB,CAACJ,UAAU,CAAC;AAE1C,MAAMM,WAAW,GAAGR,OAAO,CAAC,sBAAsB,CAAC;AACnD,MAAMS,eAAe,GAAG,4CAA4C;AAEpE,OAAO,MAAMC,kBAAkB,GAAG,IAAIH,IAAI,CAACI,GAAG,CAACC,QAAQ,CACrDJ,WAAW,EACXC,eACF,CAAC;AAED,OAAO,MAAMI,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMC,OAAO,GAAG,MAAMJ,kBAAkB,CAACK,OAAO,CAACD,OAAO,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;EACjE,OAAOF,OAAO;AACd,CAAC;AAEL,OAAO,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY,CAEzC,CAAC;AAED,OAAO,MAAMC,yBAAyB,GAAG,MAAAA,CAAA,KAAY,CAErD,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,OAAO,EAAEN,OAAO,KAAK,CAEzD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}