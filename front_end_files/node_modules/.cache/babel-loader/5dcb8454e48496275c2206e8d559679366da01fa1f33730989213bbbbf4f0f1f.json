{"ast":null,"code":"//export const helloWorldContract;\n\nexport const loadCurrentMessage = async () => {};\nexport const connectWallet = async () => {\n  if (window.ethereum) {\n    try {\n      const addressArray = await window.ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      const obj = {\n        status: \"👆🏽 Write a message in the text-field above.\",\n        address: addressArray[0]\n      };\n      return obj;\n    } catch (err) {\n      return {\n        address: \"\",\n        status: \"😥 \" + err.message\n      };\n    }\n  } else {\n    return {\n      address: \"\",\n      status: \"Must install Metamask\"\n    };\n  }\n};\nexport const getCurrentWalletConnected = async () => {};\nexport const updateMessage = async (address, message) => {};","map":{"version":3,"names":["loadCurrentMessage","connectWallet","window","ethereum","addressArray","request","method","obj","status","address","err","message","getCurrentWalletConnected","updateMessage"],"sources":["C:/Users/gcalb/OneDrive/galboum/My_Projects/CryptoToken/PotLockCoin/potlocktoken-dapp-v2/potlocktoken-dapp-v2/starter-files/src/util/interact.js"],"sourcesContent":["//export const helloWorldContract;\r\n\r\nexport const loadCurrentMessage = async () => { \r\n  \r\n};\r\n\r\nexport const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n      try {\r\n        const addressArray = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const obj = {\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n          address: addressArray[0],\r\n        };\r\n        return obj;\r\n      } catch (err) {\r\n        return {\r\n          address: \"\",\r\n          status: \"😥 \" + err.message,\r\n        };\r\n      }\r\n    } else {\r\n      return {\r\n        address: \"\",\r\n        status: (\"Must install Metamask\"), \r\n        }; \r\n    } \r\n};\r\n\r\nexport const getCurrentWalletConnected = async () => {\r\n  \r\n};\r\n\r\nexport const updateMessage = async (address, message) => {\r\n  \r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY,CAE9C,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAIC,MAAM,CAACC,QAAQ,EAAE;IACnB,IAAI;MACF,MAAMC,YAAY,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;QACjDC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMC,GAAG,GAAG;QACVC,MAAM,EAAE,+CAA+C;QACvDC,OAAO,EAAEL,YAAY,CAAC,CAAC;MACzB,CAAC;MACD,OAAOG,GAAG;IACZ,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZ,OAAO;QACLD,OAAO,EAAE,EAAE;QACXD,MAAM,EAAE,KAAK,GAAGE,GAAG,CAACC;MACtB,CAAC;IACH;EACF,CAAC,MAAM;IACL,OAAO;MACLF,OAAO,EAAE,EAAE;MACXD,MAAM,EAAG;IACT,CAAC;EACL;AACJ,CAAC;AAED,OAAO,MAAMI,yBAAyB,GAAG,MAAAA,CAAA,KAAY,CAErD,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOJ,OAAO,EAAEE,OAAO,KAAK,CAEzD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}